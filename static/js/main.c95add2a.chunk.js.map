{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Twit.js","components/TwitFactory.js","routes/Home.js","routes/Navigation.js","routes/Profile.js","routes/NickName.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_MESSAGING_SENDER_ID","appId","REACT_APP_ID","initializeApp","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Twit","twitObj","isOwner","editing","setEditing","twit","newTwit","setNewTwit","onDeleteClick","ok","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","e","updateDoc","src","autoFocus","faTrash","faPencilAlt","TwitFactory","userObj","setTwit","attachment","setAttachment","fileInput","useRef","fileRef","uid","uuidv4","uploadString","getDownloadURL","createdAt","Date","now","userId","addDoc","collection","docRef","current","maxLength","for","faPlus","accept","files","file","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","opacity","width","backgroundImage","faTimes","Home","twits","setTwits","useEffect","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","update","setUpdate","history","useHistory","updateProfile","toggleUpdate","minLength","stype","signOut","push","NickName","nickname","setNickname","isLoggedIn","maxWidth","margin","path","exact","App","init","setInit","setUserObj","onAuthStateChanged","user","Router","updatedUserObj","currentUser","photoURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c95add2a.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_ID,\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport React, { useState } from \"react\";\r\nimport { authService } from \"../fbase\";\r\n\r\nfunction AuthForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"email\") setEmail(value);\r\n    if (name === \"password\") setPassword(value);\r\n  };\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n        console.log(data);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const toggleAcount = () => setNewAccount(prev => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"LogIn\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAcount} className=\"authSwitch\">\r\n        {newAccount ? \"Login\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService } from \"../fbase\";\r\nimport {\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from \"firebase/auth\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport \"../css/auth.css\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async event => {\r\n    const { name } = event.target;\r\n    var provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    const data = await signInWithPopup(authService, provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue With Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue With GitHub <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Twit({ twitObj, isOwner }) {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTwit, setNewTwit] = useState(twitObj.twit);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure to delete this twit?\");\r\n    console.log(twitObj);\r\n    if (ok) {\r\n      await deleteDoc(doc(dbService, \"twits\", `${twitObj.id}`));\r\n      await deleteObject(ref(storageService, twitObj.attachmentUrl));\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing(prev => !prev);\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    await updateDoc(doc(dbService, \"twits\", `${twitObj.id}`), {\r\n      twit: newTwit,\r\n    });\r\n    toggleEditing();\r\n  };\r\n  const onChange = e => {\r\n    setNewTwit(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"twit\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container twitEdit\">\r\n            {twitObj.attachmentUrl && <img src={twitObj.attachmentUrl} />}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your twit\"\r\n              value={newTwit}\r\n              onChange={onChange}\r\n              autoFocus\r\n              required\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Twit\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{twitObj.twit}</h4>\r\n          {twitObj.attachmentUrl && <img src={twitObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"twit_actions\">\r\n              <button onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </button>\r\n              <button onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Twit;\r\n","import { addDoc, collection } from \"firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TwitFactory({ userObj }) {\r\n  const [twit, setTwit] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const fileInput = useRef();\r\n\r\n  const onSubmit = async e => {\r\n    if (twit === \"\" && attachment === \"\") return;\r\n\r\n    e.preventDefault();\r\n\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment) {\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(fileRef, attachment, \"data_url\");\r\n      attachmentUrl = await getDownloadURL(fileRef);\r\n    }\r\n\r\n    const twitObj = {\r\n      twit,\r\n      createdAt: Date.now(),\r\n      userId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    try {\r\n      const docRef = await addDoc(collection(dbService, \"twits\"), twitObj);\r\n      setTwit(\"\");\r\n      setAttachment(\"\");\r\n      fileInput.current.value = \"\";\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n    } catch (e) {\r\n      console.error(\"Error adding documnet: \", e);\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    setTwit(e.target.value);\r\n  };\r\n\r\n  const onFileChange = e => {\r\n    if (e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onloadend = finishedEvent => {\r\n        setAttachment(finishedEvent.currentTarget.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    fileInput.current.value = \"\";\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput_container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"factoryInput_input\"\r\n          placeholder=\"What's on your mind?\"\r\n          value={twit}\r\n          onChange={onChange}\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput_arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput_label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        ref={fileInput}\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm_attachment\">\r\n          <img\r\n            src={attachment}\r\n            width=\"30%\"\r\n            style={{ backgroundImage: attachment }}\r\n          />\r\n          <div className=\"factoryForm_clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TwitFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\r\nimport Twit from \"../components/Twit\";\r\nimport TwitFactory from \"../components/TwitFactory\";\r\nimport \"../css/twit.css\";\r\n\r\nfunction Home({ userObj }) {\r\n  const [twits, setTwits] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(dbService, \"twits\"), orderBy(\"createdAt\"));\r\n    const unsubscribe = onSnapshot(q, querySnapshot => {\r\n      const newArray = querySnapshot.docs.map(doc => {\r\n        return {\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        };\r\n      });\r\n      setTwits(newArray);\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TwitFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {twits.map(twit => (\r\n          <Twit\r\n            key={twit.id}\r\n            twitObj={twit}\r\n            isOwner={twit.userId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Navigation({ userObj }) {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>{userObj.displayName}</span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { updateProfile } from \"firebase/auth\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { authService } from \"../fbase\";\r\nimport \"../css/profile.css\";\r\n\r\nfunction Profile({ userObj, refreshUser }) {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [update, setUpdate] = useState(false);\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = e => {\r\n    setNewDisplayName(e.target.value);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(userObj, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n    toggleUpdate();\r\n  };\r\n\r\n  const toggleUpdate = () => {\r\n    setUpdate(update => !update);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {update ? (\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n          <input\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Display Name\"\r\n            value={newDisplayName}\r\n            onChange={onChange}\r\n            minLength=\"2\"\r\n            className=\"formInput\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            stype={{ marginTop: 10 }}\r\n          />\r\n        </form>\r\n      ) : (\r\n        <input\r\n          type=\"button\"\r\n          className=\"formBtn\"\r\n          onClick={toggleUpdate}\r\n          value=\"Modify\"\r\n        />\r\n      )}\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        LogOut\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import { updateProfile } from \"firebase/auth\";\r\nimport React, { useState } from \"react\";\r\nimport \"../css/nickname.css\";\r\n\r\nfunction NickName({ userObj, refreshUser }) {\r\n  const [nickname, setNickname] = useState(\"\");\r\n\r\n  const onChange = e => {\r\n    setNickname(e.target.value);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    await updateProfile(userObj, {\r\n      displayName: nickname,\r\n    });\r\n    refreshUser();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"nickNameForm\">\r\n      <input\r\n        type=\"text\"\r\n        autoFocus\r\n        placeholder=\"Display Name\"\r\n        value={nickname}\r\n        onChange={onChange}\r\n        minLength=\"2\"\r\n        className=\"nickNameInput\"\r\n      />\r\n      <input\r\n        type=\"submit\"\r\n        value=\"Make profile\"\r\n        className=\"nickNameBtn\"\r\n        stype={{ marginTop: 10 }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NickName;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"../routes/Navigation\";\r\nimport Profile from \"../routes/Profile\";\r\nimport NickName from \"../routes/NickName\";\r\n\r\nexport default ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && userObj.displayName && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100px\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {userObj.displayName ? (\r\n              <>\r\n                <Route path=\"/\" exact>\r\n                  <Home userObj={userObj} />\r\n                </Route>\r\n                <Route path=\"/profile\">\r\n                  <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                </Route>\r\n              </>\r\n            ) : (\r\n              <Route path=\"/\">\r\n                <NickName userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route>\r\n              <Auth exact path=\"/\" />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport Router from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [userObj]);\n\n  const refreshUser = () => {\n    const updatedUserObj = authService.currentUser;\n    setUserObj({\n      ...userObj,\n      userObj: {\n        displayName: updatedUserObj.displayName,\n        photoURL: updatedUserObj.photoURL,\n      },\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <Router\n          isLoggedIn={userObj}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./css/style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}